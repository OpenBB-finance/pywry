name: Pip

on: workflow_dispatch

jobs:
  manylinux:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['cp310']
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: set up rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable

    - name: install python dependencies
      run: pip install -U setuptools wheel twine cibuildwheel platformdirs

    - name: Display cibuildwheel cache dir
      id: cibuildwheel-cache
      run: |
        from platformdirs import user_cache_path
        import os
        with open(os.getenv('GITHUB_OUTPUT'), 'w') as f:
          f.write(f"dir={str(user_cache_path(appname='cibuildwheel', appauthor='pypa'))}")
      shell: python

    - name: Cache cibuildwheel tools
      uses: actions/cache@v3
      with:
        path: ${{ steps.cibuildwheel-cache.outputs.dir }}
        key: ${{ runner.os }}-cibuildwheel-${{ matrix.python-version }}

    - name: build sdist
      if: matrix.os == 'ubuntu' && matrix.python-version == 'cp310'
      run: |
        pip install maturin build
        python -m build --sdist -o wheelhouse

    - name: build ${{ matrix.platform || matrix.os }} binaries
      run: cibuildwheel --output-dir wheelhouse
      env:
        CIBW_BUILD: '${{ matrix.python-version }}-*'
        # rust doesn't seem to be available for musl linux on i686
        CIBW_SKIP: '*-musllinux_i686'
        # we build for "alt_arch_name" if it exists, else 'auto'
        CIBW_ARCHS: ${{ matrix.alt_arch_name || 'auto' }}
        CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH" CARGO_TERM_COLOR="always"'
        CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
        CIBW_BEFORE_BUILD: rustup show
        CIBW_BEFORE_BUILD_LINUX: >
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y &&
          rustup show
        CIBW_TEST_REQUIRES: websockets
        CIBW_TEST_SKIP: '*-macosx_arm64 *-macosx_universal2:arm64'
        CIBW_BUILD_VERBOSITY: 1

    - run: ${{ matrix.ls || 'ls -lh' }} wheelhouse/

    - run: twine check wheelhouse/*

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: wheelhouse

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release -o dist --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release -o dist --universal2 --find-interpreter
    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ macos, windows, manylinux ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
