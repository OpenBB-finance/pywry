name: Pip

on: workflow_dispatch

jobs:
  manylinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
        #python-version: ["3.7", "3.8", "3.9", "3.10"]
        target: [x86_64]
        #target: [x86_64, i686]
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build Wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: -i python${{ matrix.python-version }} --release --out dist --no-sdist
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist


  linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target: [x86_64]
    steps:

      - name: checkout
        uses: actions/checkout@v3

      - name : Setup sudo apt installs for ubuntu-latest
        run: |
            sudo apt update
            sudo apt install webkit2gtk-4.0-dev \
                    libgtksourceview-3.0-dev \
                    build-essential \
                    cmake \
                    curl \
                    wget \
                    libssl-dev \
                    libgtk-3-dev \
                    libayatana-appindicator3-dev \
                    librsvg2-dev \
                    libbz2-dev \
                    libcap-dev \
                    libdw-dev \
                    libelf-dev \
                    libevdev-dev \
                    libmanette-0.2-0 \
                    libmd-dev \
                    libzstd-dev
            gcc --version


      # - name: Set up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: "3.10"
      #     architecture: x64
      - name: Setup Python
        run: |
            sudo apt install -y python3-pip
            sudo apt install -y build-essential libssl-dev libffi-dev python3-dev
            sudo apt install -y python3-venv
            python3 -V

      - name: Install rust and python env
        run: |
            which rustup > /dev/null || curl --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
            export PATH="$HOME/.cargo/bin:$PATH"
            pip install --upgrade pip
            python3 -m venv env
            python -v
            source env/bin/activate
            pip list
            python -m pip install maturin
            python -m pip install maturin[patchelf]
            python -m pip install .[dev]
            python -m maturin build -o dist
            pip list

      - name : list the env vars
        run: env

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
  # windows:
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: install webview2 (windows only)
  #     shell: pwsh
  #     run: |
  #         Invoke-WebRequest https://go.microsoft.com/fwlink/p/?LinkId=2124703 -OutFile installwebview.exe -UseBasicParsing
  #         cmd /C start /wait installwebview.exe /silent /install

  #   - uses: PyO3/maturin-action@v1
  #     with:
  #       command: build
  #       args: --release -o dist --find-interpreter
  #   - name: Upload wheels
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: wheels
  #       path: dist

  # macos:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: PyO3/maturin-action@v1
  #     with:
  #       command: build
  #       args: --release -o dist --universal2 --find-interpreter
  #   - name: Upload wheels
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: wheels
  #       path: dist

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   needs: [ macos, windows, manylinux ]
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: wheels
  #     - name: Publish to PyPI
  #       uses: PyO3/maturin-action@v1
  #       env:
  #         MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
  #       with:
  #         command: upload
  #         args: --skip-existing *
