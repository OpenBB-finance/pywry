name: Pip

on: workflow_dispatch

jobs:
  build-nightly-only:
    name: Build nightly only
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        target: [x86_64]
        processor: [x86_64]

    steps:
      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - uses: actions/checkout@v1
      - name: Install nightly rust
        run: curl --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly

      - name: Setup sudo apt installs for ubuntu-latest
        run: |
          sudo apt install -y \
              build-essential \
              libgtk-3-dev \
              libsoup2.4-dev \
              libssl-dev \
              curl \
              wget \
              squashfs-tools \
              gcc \
              g++ \
              make \
              file \
              librsvg2-dev \
              libwebkit2gtk-4.1-dev \
              libayatana-appindicator3-dev

      - name: Build
        run: |
          source $HOME/.cargo/env
          pip install install maturin
          pip install install .[dev]
          maturin build -m Cargo.toml -o dist -i python"${{ matrix.python-version }}" --release --sdist

      # Try to run and import
      - name: Test Build
        if: matrix.target == 'x86_64'
        run: |
          source $HOME/.cargo/env
          pip install --force-reinstall dist/pywry-*.tar.gz
          python -c 'import pywry; import platform; print(platform.python_version());'

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*.tar.gz

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release -o dist --find-interpreter
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release -o dist --target univeral2-apple-darwin --find-interpreter
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [macos, windows, build-nightly-only]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
